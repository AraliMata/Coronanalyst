{"ast":null,"code":"var _jsxFileName = \"/home/arali/Documents/Coronanalyst-main2/src/contexts/MyContext.js\";\nimport React, { createContext, Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext(); // Create Axios instance and define the base URL\n\nconst Axios = axios.create({\n  baseURL: 'http://localhost/coronanalyst/api/',\n  headers: {\n    'Authorization': `Basic ${token}`,\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': '*'\n  }\n});\n\nclass MyContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showLogin: true,\n      isAuth: false,\n      theUser: null\n    };\n\n    this.toggleNav = () => {\n      const showLogin = !this.state.showLogin;\n      this.setState({ ...this.state,\n        showLogin\n      });\n    };\n\n    this.logoutUser = () => {\n      localStorage.removeItem('loginToken');\n      this.setState({ ...this.state,\n        isAuth: false\n      });\n    };\n\n    this.registerUser = async user => {\n      // Sending the user registration request\n      const register = await Axios.post('register.php', {\n        email: user.email,\n        password: user.password\n      });\n      return register.data;\n    };\n\n    this.loginUser = async user => {\n      // Sending the user Login request\n      console.log(\"Starting request\");\n\n      try {\n        //Axios.defaults.headers.get['Content-Type'] ='application/json;charset=utf-8';\n        //Axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\n        const login = await Axios.post('login.php', {\n          email: user.email,\n          password: user.password\n        });\n        console.log(\"Completed\");\n        console.log(login.data);\n        return login.data;\n      } catch (error) {\n        console.log(Object.keys(error), error.message);\n      }\n    };\n\n    this.isLoggedIn = async () => {\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the JWT token\n\n      if (loginToken) {\n        //Adding JWT token to axios default header\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('user-info.php'); // If user information is successfully received\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            theUser: data.user\n          });\n        }\n      }\n    };\n\n    this.isLoggedIn();\n  } // Root State\n\n\n  render() {\n    const contextValue = {\n      rootState: this.state,\n      toggleNav: this.toggleNav,\n      isLoggedIn: this.isLoggedIn,\n      registerUser: this.registerUser,\n      loginUser: this.loginUser,\n      logoutUser: this.logoutUser\n    };\n    return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: contextValue,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyContextProvider;","map":{"version":3,"sources":["/home/arali/Documents/Coronanalyst-main2/src/contexts/MyContext.js"],"names":["React","createContext","Component","axios","MyContext","Axios","create","baseURL","headers","token","MyContextProvider","constructor","state","showLogin","isAuth","theUser","toggleNav","setState","logoutUser","localStorage","removeItem","registerUser","user","register","post","email","password","data","loginUser","console","log","login","error","Object","keys","message","isLoggedIn","loginToken","getItem","defaults","common","get","success","render","contextValue","rootState","props","children"],"mappings":"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","sourcesContent":["import React, { createContext,Component } from \"react\";\nimport axios from 'axios'\nexport const MyContext = createContext();\n\n// Create Axios instance and define the base URL\nconst Axios = axios.create({\n    baseURL: 'http://localhost/coronanalyst/api/',\n    headers: {\n        'Authorization': `Basic ${token}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': '*'\n    }\n});\n\nclass MyContextProvider extends Component{\n    constructor(){\n        super();\n        this.isLoggedIn();\n    }\n\n    // Root State\n    state = {\n        showLogin:true,\n        isAuth:false,\n        theUser:null,\n    }\n    \n    // Toggle between Login & Signup page\n    toggleNav = () => {\n        const showLogin = !this.state.showLogin;\n        this.setState({\n            ...this.state,\n            showLogin\n        })\n    }\n\n    // On Click the Log out button\n    logoutUser = () => {\n        localStorage.removeItem('loginToken');\n        this.setState({\n            ...this.state,\n            isAuth:false\n        })\n    }\n\n    registerUser = async (user) => {\n\n        // Sending the user registration request\n        const register = await Axios.post('register.php',{\n            email:user.email,\n            password:user.password \n        });\n\n        return register.data;\n    }\n\n\n    loginUser = async (user) => {\n        // Sending the user Login request\n        console.log(\"Starting request\");\n        try {\n            //Axios.defaults.headers.get['Content-Type'] ='application/json;charset=utf-8';\n            //Axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\n            const login = await Axios.post('login.php',{\n                email:user.email,\n                password:user.password\n            });\n            console.log(\"Completed\");\n            console.log(login.data);\n            return login.data;\n        }\n        catch (error) {\n            console.log(Object.keys(error), error.message);\n        }\n    }\n\n    // Checking user logged in or not\n    isLoggedIn = async () => {\n        const loginToken = localStorage.getItem('loginToken');\n\n        // If inside the local-storage has the JWT token\n        if(loginToken){\n\n            //Adding JWT token to axios default header\n            Axios.defaults.headers.common['Authorization'] = 'bearer '+loginToken;\n\n            // Fetching the user information\n            const {data} = await Axios.get('user-info.php');\n\n            // If user information is successfully received\n            if(data.success && data.user){\n                this.setState({\n                    ...this.state,\n                    isAuth:true,\n                    theUser:data.user\n                });\n            }\n\n        }\n    }\n\n    render(){\n        const contextValue = {\n            rootState:this.state,\n            toggleNav:this.toggleNav,\n            isLoggedIn:this.isLoggedIn,\n            registerUser:this.registerUser,\n            loginUser:this.loginUser,\n            logoutUser:this.logoutUser\n        }\n        return(\n            <MyContext.Provider value={contextValue}>\n                {this.props.children}\n            </MyContext.Provider>\n        )\n    }\n\n}\n\nexport default MyContextProvider;"]},"metadata":{},"sourceType":"module"}