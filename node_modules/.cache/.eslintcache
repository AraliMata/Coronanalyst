[{"/home/arali/Documents/Coronanalyst-main2/src/index.js":"1","/home/arali/Documents/Coronanalyst-main2/src/Login.js":"2","/home/arali/Documents/Coronanalyst-main2/src/reportWebVitals.js":"3","/home/arali/Documents/Coronanalyst-main2/src/SobreNos.js":"4","/home/arali/Documents/Coronanalyst-main2/src/Encuesta.js":"5","/home/arali/Documents/Coronanalyst-main2/src/contexts/MyContext.js":"6","/home/arali/Documents/Coronanalyst-main2/src/pantallas/sesion_cerrada.js":"7","/home/arali/Documents/Coronanalyst-main2/src/pantallas/registro.js":"8","/home/arali/Documents/Coronanalyst-main2/src/components/Header/Header.js":"9","/home/arali/Documents/Coronanalyst-main2/src/components/Footer/Footer.js":"10","/home/arali/Documents/Coronanalyst-main2/src/App.js":"11","/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/Navbar.js":"12","/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/NavbarElements.js":"13","/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/Sidebar.js":"14","/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/SidebarElements.js":"15","/home/arali/Documents/Coronanalyst-main2/src/Inicio.js":"16","/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/Navbar2.js":"17","/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/Sidebar2.js":"18","/home/arali/Documents/Coronanalyst-main2/src/DatosPersonales.js":"19"},{"size":626,"mtime":1618493986973,"results":"20","hashOfConfig":"21"},{"size":3212,"mtime":1618458016767,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1618018035000,"results":"23","hashOfConfig":"21"},{"size":1797,"mtime":1618499380293,"results":"24","hashOfConfig":"21"},{"size":9775,"mtime":1618457448429,"results":"25","hashOfConfig":"21"},{"size":3164,"mtime":1618365999681,"results":"26","hashOfConfig":"21"},{"size":2568,"mtime":1618458789578,"results":"27","hashOfConfig":"21"},{"size":2824,"mtime":1618494228914,"results":"28","hashOfConfig":"21"},{"size":313,"mtime":1618457022647,"results":"29","hashOfConfig":"21"},{"size":344,"mtime":1618498925562,"results":"30","hashOfConfig":"21"},{"size":954,"mtime":1618493978409,"results":"31","hashOfConfig":"21"},{"size":1092,"mtime":1618458954168,"results":"32","hashOfConfig":"21"},{"size":1991,"mtime":1618457818607,"results":"33","hashOfConfig":"21"},{"size":1269,"mtime":1618430536918,"results":"34","hashOfConfig":"21"},{"size":1942,"mtime":1618430875872,"results":"35","hashOfConfig":"21"},{"size":3712,"mtime":1618499114101,"results":"36","hashOfConfig":"21"},{"size":987,"mtime":1618458886446,"results":"37","hashOfConfig":"21"},{"size":1057,"mtime":1618456261052,"results":"38","hashOfConfig":"21"},{"size":5579,"mtime":1618493874859,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1vcvh5o",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/arali/Documents/Coronanalyst-main2/src/index.js",[],["86","87"],"/home/arali/Documents/Coronanalyst-main2/src/Login.js",["88"],"import logo from './imagenes/logo_coronanalyst.jpeg'\nimport './Login.css';\nimport React, {useContext, useState} from 'react'\nimport {MyContext} from './contexts/MyContext';\nimport Navbar from './components/Navbar/Navbar';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport {Link as LinkR} from 'react-router-dom';\n\nfunction Login() {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () =>{\n        setIsOpen(!isOpen)\n    };\n\n  const {toggleNav,loginUser,isLoggedIn} = useContext(MyContext);\n\n  const initialState = {\n    userInfo:{\n        email:'',\n        password:'',\n    },\n    errorMsg:'',\n    successMsg:'',\n  }\n\n  const [state,setState] = useState(initialState);\n\n  // On change input value (email & password)\n  const onChangeValue = (e) => {\n    setState({\n        ...state,\n        userInfo:{\n            ...state.userInfo,\n            [e.target.name]:e.target.value\n        }\n    });\n    console.log(state);\n  } \n\n  // On Submit Login From\n  const submitForm = async (event) => {\n    event.preventDefault();\n    const data = await loginUser(state.userInfo);\n    if(data.success && data.token){\n        console.log(\"Data recieved, changing stage\");\n        setState({\n            ...initialState,\n            successMsg:data.message\n        });\n        console.log(\"Data recieved, storing token: \"+data.token);\n        // Store token in local storage\n        localStorage.setItem('loginToken', data.token);\n        console.log(\"Token stored\");\n        await isLoggedIn();\n    }\n    else{\n        setState({\n            ...state,\n            successMsg:'',\n            errorMsg:data.message\n        });\n    }\n  }\n\n  // Show Message on Error or Success\n  let successMsg = '';\n  let errorMsg = '';\n  if(state.errorMsg){\n      errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\n  }\n  if(state.successMsg){\n      successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\n  }\n\n  return (\n   \n    <>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} />\n      <div>\n      <div className=\"split left\">\n        <div className=\"centered\">\n          <h1>¡Bienvenido!</h1>\n          <p>Introduce tu correo y contraseña para acceder</p>\n          <form onSubmit={submitForm} noValidate>\n\n            <input type=\"text\" id=\"email\" name=\"email\" required placeholder=\"Ingresa correo electrónico\" value={state.userInfo.email} onChange={onChangeValue}/>\n            <input type=\"password\" id=\"password\" name=\"password\" required placeholder=\"Ingresa contraseña\" value={state.userInfo.password} onChange={onChangeValue} />\n              \n            <button type=\"submit\" className = \"submit\" > Iniciar sesión </button>\n          </form>\n          {errorMsg}\n          {successMsg}\n          <b><p><LinkR id=\"ref\" to=\"/Registro\">¿No tienes cuenta? Registrate aquí</LinkR></p></b>\n        </div>\n      </div>\n\n      <div className=\"split right\">\n        <div className=\"centered\">\n          <img src={logo} alt=\"Logo coronanalyst\" className=\"imgL\"/>\n          <button className=\"link\">\n            <LinkR  to=\"/\">Regresar a inicio</LinkR>\n          </button>\n        </div>\n      </div>\n      </div>\n    </>\n  );\n}\n\n\n\nexport default Login;\n","/home/arali/Documents/Coronanalyst-main2/src/reportWebVitals.js",[],"/home/arali/Documents/Coronanalyst-main2/src/SobreNos.js",["89"],"/home/arali/Documents/Coronanalyst-main2/src/Encuesta.js",[],"/home/arali/Documents/Coronanalyst-main2/src/contexts/MyContext.js",[],"/home/arali/Documents/Coronanalyst-main2/src/pantallas/sesion_cerrada.js",["90","91","92","93","94"],"import './sesion_cerrada.css';\nimport logo from '../imagenes/logo_coronanalyst.jpeg';\nimport React, {useContext, useState} from 'react';\nimport {MyContext} from '../contexts/MyContext';\nimport {Link as LinkR} from 'react-router-dom';\n\nfunction SesionCerrada() {\n\n  const {toggleNav,loginUser,isLoggedIn} = useContext(MyContext);\n\n  const initialState = {\n    userInfo:{\n        email:'',\n        password:'',\n    },\n    errorMsg:'',\n    successMsg:'',\n  }\n\n  const [state,setState] = useState(initialState);\n\n  // On change input value (email & password)\n  const onChangeValue = (e) => {\n    setState({\n        ...state,\n        userInfo:{\n            ...state.userInfo,\n            [e.target.name]:e.target.value\n        }\n    });\n    console.log(state);\n  }\n \n  // On Submit Login From\n  const submitForm = async (event) => {\n    event.preventDefault();\n    const data = await loginUser(state.userInfo);\n    if(data.success && data.token){\n        console.log(\"Data recieved, changing stage\");\n        setState({\n            ...initialState,\n            successMsg:data.message\n        });\n        console.log(\"Data recieved, storing token: \"+data.token);\n        // Store token in local storage\n        localStorage.setItem('loginToken', data.token);\n        console.log(\"Token stored\");\n        await isLoggedIn();\n    }\n    else{\n        setState({\n            ...state,\n            successMsg:'',\n            errorMsg:data.message\n        });\n    }\n  }\n\n  // Show Message on Error or Success\n  let successMsg = '';\n  let errorMsg = '';\n  if(state.errorMsg){\n      errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\n  }\n  if(state.successMsg){\n      successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\n  }\n  return (\n   \n    <div>\n\n  <div class=\"splitSC leftSC\">\n        <div class=\"centered\">\n        <h1>Sesión cerrada</h1>\n        <p>Introduce tu correo y contraseña para acceder</p>\n        <form>\n            <input type=\"text\" id = \"email\" placeholder=\"Correo electrónico\" name=\"email\" required />\n            <input type=\"password\" id = \"contra\" placeholder=\"Contraseña\" name=\"contra\" required />\n            \n            <button type=\"submit\" className = \"submit\" > Entrar </button>\n        </form>\n        </div>\n    </div>\n\n    <div class=\"splitSC rightSC\">\n        <div class=\"centered\">\n        <img src={logo} alt=\"Logo coronanalyst\"/>\n        <button className=\"link\">\n            <LinkR  to=\"/\">Regresar a inicio</LinkR>\n          </button>\n        </div>\n    </div>\n\n    </div>\n  );\n}\n\n\nexport default SesionCerrada;","/home/arali/Documents/Coronanalyst-main2/src/pantallas/registro.js",["95","96","97","98","99","100"],"import './registro.css';\nimport Header from '../components/Header/Header'\nimport Footer from '../components/Footer/Footer';\nimport React, {useContext,useState} from 'react'\nimport {MyContext} from '../contexts/MyContext';\nimport Navbar from '../components/Navbar/Navbar';\nimport Sidebar from '../components/Sidebar/Sidebar';\n\n\nfunction Registro() {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () =>{\n        setIsOpen(!isOpen)\n    };\n\n    const {toggleNav,registerUser} = useContext(MyContext);\n    const initialState = {\n        userInfo:{\n            name:'',\n            email:'',\n            password:'',\n        },\n        errorMsg:'',\n        successMsg:'',\n    }\n    const [state,setState] = useState(initialState);\n\n    // On Submit the Registration Form\n    const submitForm = async (event) => {\n        event.preventDefault();\n        const data = await registerUser(state.userInfo);\n        if(data.success){\n            setState({\n                ...initialState,\n                successMsg:data.message,\n            });\n        }\n        else{\n            setState({\n                ...state,\n                successMsg:'',\n                errorMsg:data.message\n            });\n        }\n    }\n\n    // On change the Input Value (name, email, password)\n    const onChangeValue = (e) => {\n        setState({\n            ...state,\n            userInfo:{\n                ...state.userInfo,\n                [e.target.name]:e.target.value\n            }\n        });\n    }\n    \n    // Show Message on Success or Error\n    let successMsg = '';\n    let errorMsg = '';\n    if(state.errorMsg){\n        errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\n    }\n    if(state.successMsg){\n        successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\n    }\n    \n    return (\n      <>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} />\n      <div id=\"container\">\n        <form id =\"main-content\">\n        <h1>Regístrate</h1>\n        <div id=\"imgcontainer\">\n          <img src=\"http://ww2.aeeh.es/wp-content/uploads/2013/08/form_icon_256031.png\" alt=\"registro\" className=\"registro\"/>\n        </div>\n        <div class=\"container\">\n          <label for=\"email\"><b>Correo electrónico</b></label>\n          <input type=\"text\" id = \"email\" placeholder=\"Ingresa correo electrónico\" name=\"email\" required />\n          <label for=\"contra\"><b>Contraseña</b></label>\n          <input type=\"password\" id = \"password\" placeholder=\"Ingresa contraseña\" name=\"password\" required />\n              \n          <button className=\"registrarse\" type=\"submit\" name = \"button\" onclick=\"ValidateEmail(document.loginForm.email)\"> Registrarme </button> \n        </div>\n        </form>\n      \n      </div>\n      <Footer/>\n      </>\n\n    );\n}\n\nexport default Registro;","/home/arali/Documents/Coronanalyst-main2/src/components/Header/Header.js",["101","102","103"],"import React from'react';\nimport './Header.css';\nimport { AppBar} from \"@material-ui/core\";\nimport logo from '../../imagenes/logo_coronanalyst.jpeg'\n\n\n\nexport default function Header() {\n    return(\n    <div id=\"main-header\">\n      <a >\n        <img id=\"logo-header\" src={logo}/>\n      </a> \n\n    </div>\n  );\n}\n\n\n","/home/arali/Documents/Coronanalyst-main2/src/components/Footer/Footer.js",["104"],"/home/arali/Documents/Coronanalyst-main2/src/App.js",[],"/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/Navbar.js",["105","106"],"import React from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  MobileIcon,\n  NavMenu,\n  NavBtn,\n  NavBtnLink \n} from './NavbarElements';\nimport './Navbar.css'\nimport logo from \"../../imagenes/logo_coronanalyst.jpeg\"\n\nconst Navbar = ({toggle}) => {\n  return (\n    <>\n      <Nav>\n        <a>\n          <img src={logo} id=\"logo-nav\" alt='logo' />\n        </a>\n        <MobileIcon onClick={toggle}>\n          <FaBars />\n        </MobileIcon>\n        {/* <Bars /> */}\n        <NavMenu>\n          <NavLink to='/'>\n            Inicio\n          </NavLink>\n          <NavLink to='/SobreNosotros' activeStyle>\n            Sobre nosotros\n          </NavLink>\n          <NavLink to='/Registro' activeStyle>\n            Registrarse\n          </NavLink>\n          {/* <NavLink to='/Login' activeStyle>\n            Iniciar sesión\n          </NavLink> */}\n          {/* Second Nav */}\n          <NavBtn>\n          <NavBtnLink to='/Login'>Iniciar Sesión</NavBtnLink>\n        </NavBtn>\n        </NavMenu>\n        \n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;","/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/NavbarElements.js",[],"/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/Sidebar.js",[],"/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/SidebarElements.js",["107"],"import styled from 'styled-components';\nimport {FaTimes} from 'react-icons/fa';\nimport {Link as LinkS} from 'react-scroll';\nimport {Link as LinkR} from 'react-router-dom';\n\nexport const SidebarContainer = styled.aside`\n    position: fixed;\n    z-index: 999;\n    width: 100%\n    height: 100%;\n    background: #02044b;\n    display: grid;\n    align-items: center;\n    top:0;\n    left:0;\n    transition: 0.3s ease-in-out;\n    opacity: ${({isOpen}) => (isOpen ? '100%' : '0')};\n    top: ${({isOpen}) => (isOpen ? '0' : '-100')};\n`;\n\nexport const CloseIcon = styled(FaTimes)`\n    color: #fff;\n`;\n\nexport const Icon = styled(FaTimes)`\n    position: absolute;\n    top: 1.2rem;\n    right: 1.5rem;\n    background: transparent;\n    font-size: 1rem;\n    cursor: pointer;\n    outline: none;\n`;\n\nexport const SidebarWrapper = styled.div`\n    color: #fff;\n`\n\nexport const SidebarMenu = styled.ul`\n    display: grid;\n    grid-template-columns: 1fr;\n    gird-template-rows: repeat(6, 80px);\n    text-align: center;\n\n    @media screen and (max-width: 480px){\n        grid-template-rows: repeat(6, 60px);\n    }\n`\n\nexport const SidebarLink = styled(LinkR)`\n    display: flex;\n    align-items:center;\n    justify-content: center;\n    font-size: 1.5rem;\n    tex-decoration:none;\n    list-style: none;\n    transition: 0.2s ease-in-out;\n    text-decoration: none;\n    color: #fff;\n    cursor: pointer;\n\n    &:hover{\n        color: #01bf71;\n        transition: 0.2s ease-in-out;\n    }\n`\nexport const SideBtnWrap = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const SidebarRoute = styled(LinkR)`\n    border-radius: 50px;\n    background: #256ce1;\n    white-space: nowrap;\n    padding: 16px 64px;\n    color: white;\n    font-size: 16px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n\n    &:hover{\n        transition: all 0.2s ease-in-out;\n        opacity: 0.5;\n    }\n`\n","/home/arali/Documents/Coronanalyst-main2/src/Inicio.js",["108","109","110"],"/home/arali/Documents/Coronanalyst-main2/src/components/Navbar/Navbar2.js",["111"],"import React from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport {\n  Nav,\n  NavLink,\n  MobileIcon,\n  NavMenu,\n  NavBtnLink\n} from './NavbarElements';\nimport './Navbar.css'\nimport logo from \"../../imagenes/logo_coronanalyst.jpeg\"\n\nconst Navbar2 = ({toggle}) => {\n  return (\n    <>\n      <Nav>\n        <a>\n          <img src={logo} id=\"logo-nav\" alt='logo' />\n        </a>\n        <MobileIcon onClick={toggle}>\n          <FaBars />\n        </MobileIcon>\n        <NavMenu>\n          <NavLink to='/'>\n            Inicio\n          </NavLink>\n          <NavLink to='/SobreNosotros' activeStyle>\n            Sobre nosotros\n          </NavLink>\n          <NavLink to='/Encuesta' activeStyle>\n            Encuesta\n          </NavLink>\n          {/* <NavLink to='/SesionCerrada' activeStyle>\n            Sesion Cerrada\n          </NavLink> */}\n          <NavBtnLink to='/SesionCerrada'>Cerrar sesión</NavBtnLink>\n        </NavMenu>\n      </Nav> \n    </>\n  );\n};\n\nexport default Navbar2;","/home/arali/Documents/Coronanalyst-main2/src/components/Sidebar/Sidebar2.js",[],"/home/arali/Documents/Coronanalyst-main2/src/DatosPersonales.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":17,"column":10,"nodeType":"118","messageId":"119","endLine":17,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":40,"column":21,"nodeType":"122","endLine":40,"endColumn":52},{"ruleId":"116","severity":1,"message":"117","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":23,"column":9,"nodeType":"118","messageId":"119","endLine":23,"endColumn":22},{"ruleId":"116","severity":1,"message":"124","line":35,"column":9,"nodeType":"118","messageId":"119","endLine":35,"endColumn":19},{"ruleId":"116","severity":1,"message":"125","line":63,"column":7,"nodeType":"118","messageId":"119","endLine":63,"endColumn":15},{"ruleId":"116","severity":1,"message":"126","line":66,"column":7,"nodeType":"118","messageId":"119","endLine":66,"endColumn":17},{"ruleId":"116","severity":1,"message":"127","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":18,"column":12,"nodeType":"118","messageId":"119","endLine":18,"endColumn":21},{"ruleId":"116","severity":1,"message":"124","line":31,"column":11,"nodeType":"118","messageId":"119","endLine":31,"endColumn":21},{"ruleId":"116","severity":1,"message":"123","line":50,"column":11,"nodeType":"118","messageId":"119","endLine":50,"endColumn":24},{"ruleId":"116","severity":1,"message":"125","line":64,"column":9,"nodeType":"118","messageId":"119","endLine":64,"endColumn":17},{"ruleId":"116","severity":1,"message":"126","line":67,"column":9,"nodeType":"118","messageId":"119","endLine":67,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":11,"column":7,"nodeType":"122","endLine":11,"endColumn":11},{"ruleId":"120","severity":1,"message":"121","line":12,"column":9,"nodeType":"122","endLine":12,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":9,"column":13,"nodeType":"122","endLine":9,"endColumn":44},{"ruleId":"116","severity":1,"message":"131","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":7},{"ruleId":"129","severity":1,"message":"130","line":19,"column":9,"nodeType":"122","endLine":19,"endColumn":12},{"ruleId":"116","severity":1,"message":"132","line":3,"column":17,"nodeType":"118","messageId":"119","endLine":3,"endColumn":22},{"ruleId":"116","severity":1,"message":"133","line":10,"column":9,"nodeType":"118","messageId":"119","endLine":10,"endColumn":18},{"ruleId":"116","severity":1,"message":"134","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":45,"column":29,"nodeType":"122","endLine":45,"endColumn":71},{"ruleId":"129","severity":1,"message":"130","line":17,"column":9,"nodeType":"122","endLine":17,"endColumn":12},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'toggleNav' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'onChangeValue' is assigned a value but never used.","'submitForm' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'successMsg' is assigned a value but never used.","'Header' is defined but never used.","'AppBar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Bars' is defined but never used.","'LinkS' is defined but never used.","'MyContext' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]